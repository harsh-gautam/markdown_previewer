(this["webpackJsonpmarkdown-previewer"]=this["webpackJsonpmarkdown-previewer"]||[]).push([[0],{15:function(e,n,t){},16:function(e,n,t){},22:function(e,n,t){"use strict";t.r(n);var a=t(1),r=t.n(a),i=t(8),s=t.n(i),c=(t(15),t(2)),o=t(3),l=t(4),d=t(6),u=t(5),h=(t(16),t(17),t(18),t(9)),b=t.n(h),j=t(10),m=t.n(j),p=t(0),v=function(e){Object(d.a)(t,e);var n=Object(u.a)(t);function t(e){return Object(o.a)(this,t),n.call(this,e)}return Object(l.a)(t,[{key:"render",value:function(){return Object(p.jsx)("div",{className:"editor-container",children:Object(p.jsxs)("div",{className:"d-flex flex-column",children:[Object(p.jsx)("p",{className:"header",children:"Editor"}),Object(p.jsx)("textarea",{id:"editor",onChange:this.props.onInputChange,value:this.props.input})]})})}}]),t}(r.a.Component),f=function(e){Object(d.a)(t,e);var n=Object(u.a)(t);function t(e){var a;return Object(o.a)(this,t),(a=n.call(this,e)).getMarkedDownText=a.getMarkedDownText.bind(Object(c.a)(a)),a}return Object(l.a)(t,[{key:"getMarkedDownText",value:function(){var e=m.a.sanitize(this.props.previewText);return{__html:b()(e)}}},{key:"render",value:function(){return console.log(this.sanitized_text),Object(p.jsx)("div",{children:Object(p.jsxs)("div",{className:"d-flex flex-column",children:[Object(p.jsx)("p",{className:"header",children:"Preview"}),Object(p.jsx)("p",{id:"preview",className:"preview-container overflow-auto",dangerouslySetInnerHTML:this.getMarkedDownText()})]})})}}]),t}(r.a.Component),O=function(e){Object(d.a)(t,e);var n=Object(u.a)(t);function t(e){var a;return Object(o.a)(this,t),(a=n.call(this,e)).state={input:""},a.onInputChange=a.onInputChange.bind(Object(c.a)(a)),a}return Object(l.a)(t,[{key:"componentDidMount",value:function(){this.setState({input:"# Welcome to my React Markdown Previewer!\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, `<div></div>`, between 2 backticks.\n\n```\n// this is multi-line code:\n            \nfunction anotherExample(firstLine, lastLine) {\nif (firstLine == '```' && lastLine == '```') {\n    return multiLineCode;\n    }\n}\n```\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n    - Some are bulleted.\n        - With different indentation levels.\n            - That look like this.\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n            "})}},{key:"onInputChange",value:function(e){this.setState({input:e.target.value})}},{key:"render",value:function(){return Object(p.jsxs)("div",{className:"body h-100",children:[Object(p.jsx)("nav",{class:"navbar navbar-expand-lg",children:Object(p.jsx)("a",{class:"navbar-brand",href:"#",children:"Simple React Markdown Previewer"})}),Object(p.jsx)("div",{className:"container-fluid",children:Object(p.jsxs)("div",{className:"row mt-3",children:[Object(p.jsx)("div",{className:"col-sm-12 col-md-6 pl-md-5",children:Object(p.jsx)(v,{onInputChange:this.onInputChange,input:this.state.input})}),Object(p.jsx)("div",{className:"col-sm-12 col-md-6 pr-md-5 mt-sm-5 mt-md-0",children:Object(p.jsx)(f,{previewText:this.state.input})})]})})]})}}]),t}(r.a.Component);s.a.render(Object(p.jsx)(r.a.StrictMode,{children:Object(p.jsx)(O,{})}),document.getElementById("root"))}},[[22,1,2]]]);
//# sourceMappingURL=main.9f0649ae.chunk.js.map